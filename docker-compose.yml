version: "3"

services:
  account_service:
    build:
      context: .
      dockerfile: Dockerfile.Account
    image: account_service_i:latest
    container_name: account_service_c
    env_file:
      - .env
    ports:
      - "${SERVICE_PORT_ACCOUNT}:${SERVICE_PORT_ACCOUNT}"
    volumes:
      - ./account:/code
    depends_on:
      - postgres_account_go
      - kafka

  postgres_account_go:
    image: postgres:latest
    container_name: pg_account_go_c
    restart: always
    env_file:
      - ./account/config.env
      - .env
    ports:
      - "${DB_ACCOUNT_PORT}:${DB_ACCOUNT_PORT}"
    volumes:
      - postgres_data_go:/var/lib/postgresql/data
    command: postgres -c listen_addresses='*' -c port=8103

  journal_service:
    build:
      context: .
      dockerfile: Dockerfile.Journal
    image: journal_service_i:latest
    container_name: journal_service_c
    env_file:
      - .env
    ports:
      - "${SERVICE_PORT_JOURNAL}:${SERVICE_PORT_JOURNAL}"
    volumes:
      - ./journal:/code
    depends_on:
      - postgres_journal_go
      - kafka

  postgres_journal_go:
    image: postgres:latest
    container_name: pg_journal_go_c
    restart: always
    env_file:
      - ./journal/config.env
      - .env
    ports:
      - "${DB_JOURNAL_PORT}:${DB_JOURNAL_PORT}"
    volumes:
      - postgres_data_journal_go:/var/lib/postgresql/data
    command: postgres -c listen_addresses='*' -c port=8104

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - ${ZOOKEPER_OUT_PORT}:${ZOOKEEPER_KAFKA_PORT}

volumes:
  postgres_data_go:
  postgres_data_journal_go:
